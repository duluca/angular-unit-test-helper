version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1
#   coveralls: coveralls/coveralls@2.2.1
commands:
  test-with-project:
    description: |
      Run tests with a project that uses the package.
    parameters:
      project:
        type: string
      github-url:
        type: string
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Setup << parameters.project >>
          command: |
            git clone << parameters.github-url >>
            cd << parameters.project >>
            npm ci
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Apply angular-unit-test-helper
          command: |
            set -exu
            cd << parameters.project >>
            npm install /tmp/workspace/pkg/angular-unit-test-helper-*.tgz
      - run:
          name: Run << parameters.project >> tests
          command: |
            cd << parameters.project >>
            npx ng test --watch=false --project << parameters.project >>
jobs:
  build:
    docker:
      - image: cimg/node:lts-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # check npm dependencies for security risks - run 'npm audit' to fix
      - run:
          name: Security Check
          command: npx audit-ci --moderate --report-type full --skip-dev

      - run: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # ensure code formatting standards are adhered to - run 'npm run standardize' to fix
      - run:
          name: Check for Code Style and Linting Issues
          command: |
            npm run style
            npm run lint

      - run:
          name: Run Tests and Check Code Coverage
          command: npm run test:ci

      - run: npm run build
      - run: npm pack

      - run: cp *.tgz /tmp/circle-artifacts
      - store_artifacts:
          path: /tmp/circle-artifacts
          destination: angular-unit-test-helper.tgz
      - run:
          name: Move compiled app to workspace
          command: |
            set -exu
            mkdir -p /tmp/workspace/pkg
            mv *.tgz /tmp/workspace/pkg/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - pkg
  deploy:
    docker:
      - image: cimg/node:lts
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish $(echo /tmp/workspace/pkg/*.tgz)
  test-lemon-mart:
    docker:
      - image: cimg/node:lts-browsers
    working_directory: ~/
    steps:
      - test-with-project:
          project: lemon-mart
          github-url: https://github.com/duluca/lemon-mart
  test-local-weather-app:
    docker:
      - image: cimg/node:lts-browsers
    working_directory: ~/
    steps:
      - test-with-project:
          project: local-weather-app
          github-url: https://github.com/duluca/local-weather-app
workflows:
  build-and-deploy:
    jobs:
      - build
      - test-lemon-mart:
          requires:
            - build
          filters:
            branches:
              ignore: main
      - test-local-weather-app:
          requires:
            - build
          filters:
            branches:
              ignore: main
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: main
      - deploy:
          context: npm
          requires:
            - hold
